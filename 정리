ASM Server
-> Endpoint 정보를 관리 및 명령하는 서버
주요 하는일
상태관리 -> 클라이언트 연경 상태 관리
정보 관리 -> 로그 , 통계등의 정보를 관리
자산 관리 -> IA가 수집하는 환경정보(OS,설치 프로그램 , 하드웨어 정보)등 관리
작업 명령 -> 클라이언트에 작업을 명령 업데이트 해라 , 정책을 받아가라등의 시키는 것들
업데이트
보고서
정책관리 -> ! 정책을을 바로 적용하지 않는다
            -> 관리 콘솔이 정책을 저장하면 서버는 이를 받아서 정책을 저장하고 바뀐 정책을 클라가 받아간다.
			-> 정책이 변경되면 바로 클라이언트에 적용되는 것이 아니라 기존 클라이언트가 가지고 있는 정책의 HASH값과 비교하여
				해쉬값이 다르면 이를 polling을 통해 적용한다.
				
	   -> 정책은 서버와 클라이언트가 모두 가지고 있기에 이를 동기화 처리한다.
	   
	   
	   
ASM
서버 매니지 먼트
	-> 가장 최상위
	-> 서버 라이프 사이클 관리
	-> 서버 제품 업데이트(db , application) , 업데이트 해야한다면 AWS로 부터 업데이트 파일을 다운로드하여 OS특정 경로에 있는 filset에 저장한다
	-> 인증서 생성 (javakey store기반에 tls 1.2)
	-> DB백업
	-> 시작 -> 업데이트가 있다면 업데이트 진행(모든 클라이언트 , 서버 가동 정지) -> 이후 다시 시작한다.
	-> shell ,batch , pid 정보를 기준으로 실행하고 정지한다!
	
ASM 서버  -> 기능을 제공하는 서버(push , event)

업데이트 서버 -> 웹서버 -> 클라이언트 업데이트 제공하는
		   -> 업데이트가 있다면 clinet는 웹서버(apach에 요청을 보내고 apach 는 filset에서 업데이트할 파일을 클라리언트에 전달)
		   -> ***업데이트 하고 싶은데 filset에 없을 수 도 있을까??
		   
DataBase -> mariadb
------------------------------------------------------------------------------------- 여기까지가 우리 플랫폼 개발탐이 진행
core engine 개발은 코어엔진 개발팀이 진행하나 배포에 관한 것들은 플랫폼 팀이 담당한다
         -> ** 기존 LP(포스트 기계?) 검사를 하면 파일 기반인데 폐쇄망일 경우 asm서버가 이를 받아 core engine에 전달
         -> 

EndPoint 알약 pms/mpi 플랫폼 개발팀 경우 거의 한팀
   core 개발
   Ti
   SercureCloud는 협업 관계!!즉 위에 3개는 한팀이라고 보고 밑에는 각각의 다른 부서라고 생각하면 이해하기 쉽다!
   


Setup
윈도우 exe , 리눅스 rpm
1. 라이센스 기준(라이센스에 각 제품의 버전 즉 라이센스에 종속)으로 각 제품을 압축해제 -> window경우 경로를 설정 할 수 있으나
   리눅스의 경우에는 ASM_HOME경로에 설치가 된다.
   
   ASM_HOME은 asm , apache , mariadb , asmupt(서버매니저)로 이루어 져있다

2 서비스 , 패키지 dependency를 설치

3 설정 정보 변경 -> 리눅스 설치 경우 각종 설정 정보들을 입력하는데 이를 받아서 설정 정보 저장하는 파일을 변경한다!








   
   
   
   
   
   
   
   